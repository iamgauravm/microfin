@{
    ViewData["Title"] = "Expenses Page";
}

<div class="pagetitle">
    <div class="row">
        <div class="col-6">
            <h1>Expenses</h1>
        </div>
        <div class="col-6 text-end pt-2">
            <input class="btn btn-sm btn-primary" type="button" value="+ Expense" onclick="onClickCreateExpense(event)"/>
        </div>
    </div>

    <nav>
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a href="/">Home</a>
            </li>
            <li class="breadcrumb-item active">Expenses</li>
        </ol>
    </nav>
</div>


<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-body pt-4">
                <table class="table table-bordered table-striped" style="width:100%" id="tblstExpenses">
                    <thead>
                    <tr>
                        <th style="width: 150px">Date</th>
                        <th style="width: 100px">Category</th>
                        <th>Description</th>
                        <th style="width: 150px">Amount</th>
                        <th style="width: 50px"></th>
                    </tr>
                    </thead>
                    <tbody >
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>


<!-- Create Dairy Modal -->
<div class="modal fade" id="manageExpenseModel" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog modal-md">
        <div class="modal-content">
            <div class="modal-header py-2">
                <h5 class="modal-title" id="staticBackdropLabel">Manage Expense</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-group">
                        <label class="form-control-label form-control-sm">Date&nbsp;<span class="badge bg-danger">Required</span></label>
                        <input class="form-control form-control-sm" type="date" id="txtExpenseDate"/>
                    </div>
                    <div class="form-group">
                        <label class="form-control-label form-control-sm">Category&nbsp;<span class="badge bg-danger">Required</span></label>
                        <select class="form-select form-select-sm" id="ddlExpenseCategory">
                            <option value="Other">Other</option>
                            <option value="Salary">Salary</option>
                            <option value="Purchase">Purchase</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label class="form-control-label form-control-sm">Description&nbsp;<span class="badge bg-danger">Required</span></label>
                        <input class="form-control form-control-sm" type="text" id="txtExpenseDescription"/>
                    </div>
                    <div class="form-group">
                        <label class="form-control-label form-control-sm">Amount&nbsp;<span class="badge bg-danger">Required</span></label>
                        <input class="form-control form-control-sm" type="number" id="txtExpenseAmount"/>
                    </div>
                </div>
                <hr/>

            </div>
            <div class="modal-footer py-1">
                <button type="button" class="btn btn-sm btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-sm btn-primary" onclick="onClickExpenseSave()">Save</button>
            </div>
        </div>
    </div>
</div>


@section Scripts
{
    <script type="text/javascript">
        var createExpenseModel  = new bootstrap.Modal(document.getElementById('manageExpenseModel'), {backdrop: 'static',keyboard: false});
        var _Expense = {
            id: 0,
            description: '',
            expenseDate: new Date(),
            amount:0            
        };
        $( document ).ready(function() {
            initialedExpense();
            getAllExpenses();
        });
        
        
        
        getAllExpenses = () =>{
            $.ajax({
                type: 'GET',
                url: "/Expense/getall",                
                success: function (res) {
                   console.log(res.data);
                  if ( $.fn.DataTable.isDataTable('#tblstExpenses') ) {
                    $('#tblstExpenses').DataTable().destroy();
                  }
                   var table = $('#tblstExpenses').DataTable(
                       {
                           data: res.data,
                           columnDefs: [
                               {render: function (data, type, row) { return '<a href="javascript:void(0);" onclick="getExpenseDetail('+row.id+')">'+moment(row.expenseDate).format('DD-MM-YYYY')+'</a>'},defaultContent: "-",targets: 0},
                               {render: function (data, type, row) { return row.category;},defaultContent: "-",targets: 1},
                               {render: function (data, type, row) { return '<a href="javascript:void(0);" onclick="getExpenseDetail('+row.id+')">'+row.description+'</a>'},defaultContent: "-",targets: 2},
                               {render: function (data, type, row) { return row.amount;},defaultContent: "-",targets: 3},
                               {render: function (data, type, row) { return '<a href="javascript:void(0);" class="text-danger" onclick="deleteExpense('+row.id+')"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash3-fill" viewBox="0 0 16 16"><path d="M11 1.5v1h3.5a.5.5 0 0 1 0 1h-.538l-.853 10.66A2 2 0 0 1 11.115 16h-6.23a2 2 0 0 1-1.994-1.84L2.038 3.5H1.5a.5.5 0 0 1 0-1H5v-1A1.5 1.5 0 0 1 6.5 0h3A1.5 1.5 0 0 1 11 1.5Zm-5 0v1h4v-1a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5ZM4.5 5.029l.5 8.5a.5.5 0 1 0 .998-.06l-.5-8.5a.5.5 0 1 0-.998.06Zm6.53-.528a.5.5 0 0 0-.528.47l-.5 8.5a.5.5 0 0 0 .998.058l.5-8.5a.5.5 0 0 0-.47-.528ZM8 4.5a.5.5 0 0 0-.5.5v8.5a.5.5 0 0 0 1 0V5a.5.5 0 0 0-.5-.5Z"/></svg>'},defaultContent: "-",targets: 4},
                           ],
                           responsive: true,
                           lengthChange: false,
                           pageLength: 25,
                           buttons: [ { extend: 'pdf',split: ['excel'],}]
                       });
                   table.buttons().container().appendTo('#tblstExpenses_wrapper .col-md-6:eq(0)' );
                   
                }
            });
        }
        initialedExpense = () =>{
            _Expense = { id: 0,category:'',description: '',expenseDate: new Date(),amount:0 };
            // initialied  values
            $('#txtExpenseDate').val(moment(_Expense.expenseDate).format("YYYY-MM-DD"));            
            $('#txtExpenseDescription').val(_Expense.description);            
            $('#txtExpenseAmount').val(_Expense.amount);
            $('#ddlExpenseCategory').val(_Expense.category);
        }
        
        
        deleteExpense = (id) =>{
            $.ajax({
                type: 'POST',
                url: "/Expense/delete/"+id,
                success: function (res) {
                    initialedExpense();
                    getAllExpenses();
                }
            });
        }
        getExpenseDetail = (id) =>{
           _Expense = { id: 0,description: '',expenseDate: new Date(),amount:0 };
            $.ajax({
                type: 'GET',
                url: "/Expense/get/"+id,
                success: function (res) {
                    _Expense = res.data;
                    // initialied  values
                   $('#txtExpenseDate').val(moment(_Expense.expenseDate).format("YYYY-MM-DD"));
                   $('#txtExpenseDescription').val(_Expense.description);
                   $('#txtExpenseAmount').val(_Expense.amount);   
                   $('#ddlExpenseCategory').val(_Expense.category);
                   
                    createExpenseModel.show();
                }
            });
        }
        onClickCreateExpense = ()=>{  
            initialedExpense();
            createExpenseModel.show();
        }           
        onClickExpenseSave =() => { 
            if ($('#txtExpenseDate').val()=='' || $('#txtExpenseDescription').val()=='' || $('#txtExpenseAmount').val()==''){
                swal({ title: "Please enter required fields", icon: "warning",});
                return;
            }
            
            if (parseFloat($('#txtExpenseAmount').val())==0){
                swal({ title: "Please enter amount more then 0.", icon: "warning",});
                return;
            }
            
            var payload = {
                id: _Expense.id,
                expenseDate: $('#txtExpenseDate').val(),
                category:$('#ddlExpenseCategory').val(),
                description: $('#txtExpenseDescription').val(),
                amount:$('#txtExpenseAmount').val()
            };
            $.ajax({
            type: 'POST',
            url: "/Expense/createOrUpdate",
            data:payload,
            success: function (res) {
                console.log(res);
                initialedExpense();
                getAllExpenses();
                createExpenseModel.hide();
            }
            });
        }      
      
    </script>
}