@{
    ViewData["Title"] = "Investor Page";
}

<div class="pagetitle">
    <div class="row">
        <div class="col-6">
            <h1>Investors</h1>
        </div>
        <div class="col-6 text-end pt-2">
            <input class="btn btn-sm btn-primary" type="button" value="+ Investor" onclick="onClickCreateAccount(event)"/>
        </div>
    </div>
    <nav>
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a href="/">Home</a>
            </li>
            <li class="breadcrumb-item active">Investors</li>
        </ol>
    </nav>
</div>

<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-body pt-4">
                <table class="table table-bordered table-striped" style="width:100%" id="tblstAccounts">
                    <thead>
                    <tr>
                        <th>#</th>
                        <th>Name</th>
                        <th>Mobile</th>
                        <th>Address</th>
                        <th>Available Funds</th>
                        <th></th>
                    </tr>
                    </thead>
                    <tbody >
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>


<!-- Create Investor Modal -->
<div class="modal fade" id="manageAccountModel" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog modal-md">
        <div class="modal-content">
            <div class="modal-header py-2">
                <h5 class="modal-title" id="staticBackdropLabel">Manage Investor</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-group">
                        <label class="form-control-label form-control-sm">Investor Name&nbsp;<span class="badge bg-danger">Required</span></label>
                        <input class="form-control form-control-sm" id="txtAccountname"/>
                    </div>
                    <div class="form-group">
                        <label class="form-control-label form-control-sm">Mobile&nbsp;<span class="badge bg-danger">Required</span></label>
                        <input class="form-control form-control-sm Number" type="text" id="txtAccountmobile"/>
                    </div>
                    <div class="form-group">
                        <label class="form-control-label form-control-sm">Address <span class="badge bg-danger">Required</span></label>
                        <input class="form-control form-control-sm" id="txtAccountaddress"/>
                    </div>
                    <div class="form-group">
                        <label class="form-control-label form-control-sm">Remarks</label>
                        <textarea class="form-control form-control-sm" id="txtAccountremarks"></textarea>
                    </div>
                </div>
                <hr/>

            </div>
            <div class="modal-footer py-1">
                <button type="button" class="btn btn-sm btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-sm btn-primary" onclick="onClickAccountSave()">Save</button>
            </div>
        </div>
    </div>
</div>

<!-- Add Fund  Modal -->
<div class="modal fade" id="investorAddFundModel" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header py-2">
                <h5 class="modal-title" id="staticBackdropLabel">Add Fund</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form>
                   <input type="hidden" id="txtAddFund_AccountId"/>
                    <div class="row mb-1">
                        <label for="txtAddFund_Date" class="col-sm-4 col-form-label col-form-label-sm">Date</label>
                        <div class="col-sm-8">
                            <input type="date" id="txtAddFund_Date" class="form-control form-control-sm"/>
                        </div>
                    </div>
                    <div class="row mb-1">
                        <label for="txtAddFund_Amount" class="col-sm-4 col-form-label col-form-label-sm">Amount</label>
                        <div class="col-sm-8"> <input type="number" id="txtAddFund_Amount" class="form-control form-control-sm"/></div>
                    </div>
                    <fieldset class="row mb-1">
                        <legend class="col-form-label col-sm-4 pt-0">Mode</legend>
                        <div class="col-sm-8">
                            <div class="form-check"> <input class="form-check-input" type="radio" name="rdAddFund_PaymentMode" id="rdAddFund_PaymentMode" value="CASH" checked=""> <label class="form-check-label" for="rdAddFund_PaymentMode"> Cash </label></div>
                            <div class="form-check"> <input class="form-check-input" type="radio" name="rdAddFund_PaymentMode" id="rdAddFund_PaymentMode" value="UPI"> <label class="form-check-label" for="rdAddFund_PaymentMode"> UPI </label></div>
                        </div>
                    </fieldset>
                    <div class="row mb-1">
                        <label class="col-sm-4 col-form-label"></label>
                        <div class="col-sm-8">
                            <button type="button" onclick="onClickAddFundSave()" class="btn btn-primary">Add Fund</button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
@section Scripts
{
    <script type="text/javascript">
        var investorAddFundModel  = new bootstrap.Modal(document.getElementById('investorAddFundModel'), {backdrop: 'static',keyboard: false});
        var createAccountModel  = new bootstrap.Modal(document.getElementById('manageAccountModel'), {backdrop: 'static',keyboard: false});
        var _Account = {
            id: 0,
            name: '',
            address: '',
            mobile:'',
            diaries:''            
        };
        $( document ).ready(function() {
            initialedAccount();
            getAllAccounts();
        });
        
        
        
        getAllAccounts = () =>{
            $.ajax({
                type: 'GET',
                url: "/accounts/getall/"+accountType.Investors,                
                success: function (res) {
                   console.log(res.data);
                  if ( $.fn.DataTable.isDataTable('#tblstAccounts') ) {
                    $('#tblstAccounts').DataTable().destroy();
                  }
                   var table = $('#tblstAccounts').DataTable(
                       {
                           data: res.data,
                           columnDefs: [
                               {render: function (data, type, row) { return row.id;},defaultContent: "-",targets: 0},
                               {render: function (data, type, row) { return '<a href="javascript:void(0);" onclick="getAccountDetail('+row.id+')">'+row.name+'</a>'},defaultContent: "-",targets: 1},
                               {render: function (data, type, row) { return row.mobile;},defaultContent: "-",targets: 2},
                               {render: function (data, type, row) { return row.address;},defaultContent: "-",targets: 3},
                               {render: function (data, type, row) { return '₹ '+formatCurrencyN(row.availableFunds);},defaultContent: "-",targets: 4,className: "text-end"},
                               {render: function (data, type, row) { return '<a href="javascript:void(0);" class="text-success" onclick="showAccountAddFund('+row.id+')">Add Fund</a>'},defaultContent: "-",targets: 5},
                           ],
                           responsive: true,
                           lengthChange: false,
                           pageLength: 25,
                           buttons: [ { extend: 'pdf',split: ['excel'],}]
                       });
                   table.buttons().container().appendTo('#tblstAccounts_wrapper .col-md-6:eq(0)' );
                   
                }
            });
        }
        initialedAccount = () =>{
            _Account = {id: 0,name: '',address: '',mobile:''};
            // initialied  values
            $('#txtAccountname').val(_Account.name);            
            $('#txtAccountmobile').val(_Account.mobile);            
            $('#txtAccountaddress').val(_Account.address);
            $('#txtAccountremarks').val(_Account.remarks);
        }
        getAccountDetail = (id) =>{
            _Account = {id: 0,name: '',address: '',mobile:'',remarks:''};
            $.ajax({
                type: 'GET',
                url: "/accounts/get/"+accountType.Investors+'/'+id,
                success: function (res) {
                    _Account = res.data;
                    // initialied  values
                    $('#txtAccountname').val(_Account.name);
                    $('#txtAccountmobile').val(_Account.mobile);
                    $('#txtAccountaddress').val(_Account.address);
                    $('#txtAccountremarks').val(_Account.remarks);
                   
                    createAccountModel.show();
                }
            });
        }
        onClickCreateAccount = ()=>{  
            initialedAccount();
            createAccountModel.show();
        }           
        onClickAccountSave =() => { 
            if ($('#txtAccountname').val()=='' || $('#txtAccountmobile').val()=='' || $('#txtAccountaddress').val()==''){
                swal({ title: "Please enter required fields", icon: "warning",});
                return;
            }
            
            var payload = {
                id: _Account.id,
                name: $('#txtAccountname').val(),
                address: $('#txtAccountaddress').val(),
                mobile:$('#txtAccountmobile').val(),
                remarks:$('#txtAccountremarks').val()
            };
            $.ajax({
            type: 'POST',
            url: "/accounts/createOrUpdate/"+accountType.Investors,
            data:payload,
            success: function (res) {
                console.log(res);
                initialedAccount();
                getAllAccounts();
                createAccountModel.hide();
            }
            });
        }      
        
        deleteAccount = (id) =>{
            swal({
            title: "Are you sure want to delete investor?",
            icon: "warning",
            buttons: [
                'No, cancel it!',
                'Yes, I am sure!'
                ],
            dangerMode: true,
            }).then(function(isConfirm) {
              if (isConfirm) {
                  $.ajax({
                  type: 'POST',
                  url: "/accounts/delete/"+accountType.Investors+'/'+id,
                  success: function (res) {
                      initialedAccount();
                      getAllAccounts();
                       swal({
                            title: 'Deleted!',
                            text: 'Investor are successfully deleted!',
                            icon: 'success'
                          }).then(function() {
                            //form.submit(); // <--- submit form programmatically
                          });
                  }
                  });
               
              }
            });
        }
        
        
        showAccountAddFund = (id) =>{
            $('#txtAddFund_AccountId').val(id);
            $('#txtAddFund_Date').val(new Date())
            $('#txtAddFund_Amount').val(0)
            $('#rdAddFund_PaymentMode').val('CASH');
            investorAddFundModel.show();
            // _Account = {id: 0,name: '',address: '',mobile:'',remarks:''};
            // $.ajax({
            //     type: 'GET',
            //     url: "/accounts/get/"+accountType.Investors+'/'+id,
            //     success: function (res) {
            //         _Account = res.data;
            //         // initialied  values
            //         $('#txtAccountname').val(_Account.name);
            //         $('#txtAccountmobile').val(_Account.mobile);
            //         $('#txtAccountaddress').val(_Account.address);
            //         $('#txtAccountremarks').val(_Account.remarks);
            //       
            //         createAccountModel.show();
            //     }
            // });
        }
        onClickAddFundSave = ()=>{
            var payload = {
                accountId: parseInt($('#txtAddFund_AccountId').val()),
                transDate: $('#txtAddFund_Date').val(),
                amount: parseInt($('#txtAddFund_Amount').val()),
                mode:$('#rdAddFund_PaymentMode').val()
            };
            $.ajax({
                type: 'POST',
                url: "/investor/addfund",
                data: payload,
                success: function (res) {                    
                    // initialied  values
                    $('#txtAddFund_AccountId').val(0);
                    $('#txtAddFund_Date').val(new Date())
                    $('#txtAddFund_Amount').val(0)
                    $('#rdAddFund_PaymentMode').val('CASH');

                    getAllAccounts();
                    investorAddFundModel.hide();
                }
            });
        }
    </script>
}